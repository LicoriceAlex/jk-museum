.grid {
  display: grid;
  // grid-template-columns will be set by the component's columns prop
  gap: 15px; // Space between images (adjust as needed)
  width: 100%; // Ensure the grid takes full available width
  margin-bottom: 20px; // Space below the grid block

  // Optional: Center the grid if it doesn't take 100% width
  // justify-content: center;
  // align-items: start; // or stretch, center, end depending on desired vertical alignment

  // Adjustments for different column counts if needed (though the prop handles it)
  // For example, if you always want 2 columns on small screens, regardless of prop:
  // @media (max-width: 768px) {
  //   grid-template-columns: repeat(2, 1fr) !important;
  // }
}

.gridItem {
  display: flex;
  justify-content: center; // Center the ImageBlock horizontally within its grid cell
  align-items: flex-start; // Align ImageBlock to the top of its grid cell
  // Optional: Add some padding if ImageBlock doesn't have internal padding
  padding: 5px; // Small padding inside each grid item

  // Ensure images scale properly within their containers
  :global(.image-block-container) { // Assuming ImageBlock has a top-level class like .image-block-container
    width: 100%;
    height: auto; // Or a fixed aspect ratio for consistent heights
    max-width: 100%;
    display: flex; // To help center content inside ImageBlock
    flex-direction: column; // Arrange content vertically if any text
    align-items: center; // Center image horizontally
    justify-content: center; // Center image vertically
  }

  // Ensure the actual image within ImageBlock scales
  :global(.image-block-image) { // Assuming ImageBlock has an <img> with class .image-block-image
    width: 100%;
    height: auto;
    display: block; // Remove extra space below image
    object-fit: cover; // Crop image to fit, maintaining aspect ratio
    border-radius: 4px; // Slightly rounded corners for images
  }

  // Style for the upload placeholder within ImageBlock
  :global(.image-block-placeholder) { // Assuming ImageBlock has a placeholder with this class
    width: 100%;
    padding-bottom: 75%; // Creates a 4:3 aspect ratio placeholder
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #f0f0f0;
    border: 1px dashed #ccc;
    color: #888;
    cursor: pointer;
    border-radius: 4px;
    text-align: center;
    font-size: 14px;
    &:hover {
      background-color: #e9e9e9;
      border-color: #aaa;
    }
    span {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }
}
