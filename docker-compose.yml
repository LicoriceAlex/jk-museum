services:
  db:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -p ${POSTGRES_PORT}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: prod
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/v1/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  migrations:
    container_name: migrations
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: migrations
    volumes:
      - ./migrations:/app/migrations
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    command: alembic upgrade head


volumes:
  postgres_data: