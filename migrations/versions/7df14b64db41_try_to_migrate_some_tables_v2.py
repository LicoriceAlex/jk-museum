"""try to migrate some tables v2

Revision ID: 7df14b64db41
Revises: 473ddfb2d837
Create Date: 2025-05-21 15:55:26.898296

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '7df14b64db41'
down_revision: Union[str, None] = '473ddfb2d837'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exhibitions',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('cover_image_key', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('cover_type', sa.Enum('inside', 'outside', name='covertypeenum'), nullable=True),
    sa.Column('status', sa.Enum('draft', 'published', 'archived', name='exhibitionstatusenum'), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('templates',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('preview_image_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('organization_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exhibition_blocks',
    sa.Column('type', sa.Enum('HEADER', 'TEXT', 'QUOTE', 'IMAGE_TEXT_RIGHT', 'IMAGE_TEXT_LEFT', 'LAYOUT_IMG_TEXT_IMG', 'LAYOUT_TEXT_IMG_TEXT', 'IMAGES_2', 'IMAGES_3', 'IMAGES_4', 'CAROUSEL', name='exhibitionblocktypeenum'), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('settings', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('exhibition_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['exhibition_id'], ['exhibitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exhibition_blocks_exhibition_id'), 'exhibition_blocks', ['exhibition_id'], unique=False)
    op.create_table('exhibition_exhibits',
    sa.Column('exhibition_id', sa.Uuid(), nullable=False),
    sa.Column('exhibit_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['exhibit_id'], ['exhibits.id'], ),
    sa.ForeignKeyConstraint(['exhibition_id'], ['exhibitions.id'], ),
    sa.PrimaryKeyConstraint('exhibition_id', 'exhibit_id')
    )
    op.create_table('exhibition_participants',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('exhibition_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['exhibition_id'], ['exhibitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exhibition_ratings',
    sa.Column('exhibition_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['exhibition_id'], ['exhibitions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('exhibition_id', 'user_id')
    )
    op.create_table('exhibition_tags',
    sa.Column('exhibition_id', sa.Uuid(), nullable=False),
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['exhibition_id'], ['exhibitions.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('exhibition_id', 'tag_id')
    )
    op.create_table('user_exhibition_likes',
    sa.Column('exhibition_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['exhibition_id'], ['exhibitions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('exhibition_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_exhibition_likes')
    op.drop_table('exhibition_tags')
    op.drop_table('exhibition_ratings')
    op.drop_table('exhibition_participants')
    op.drop_table('exhibition_exhibits')
    op.drop_index(op.f('ix_exhibition_blocks_exhibition_id'), table_name='exhibition_blocks')
    op.drop_table('exhibition_blocks')
    op.drop_table('templates')
    op.drop_table('exhibitions')
    # ### end Alembic commands ###
