"""added models from task (fixed relationships and fks)

Revision ID: 1496a8a81f0a
Revises: 4ff8bf360171
Create Date: 2025-04-03 10:10:17.899940

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '1496a8a81f0a'
down_revision: Union[str, None] = '4ff8bf360171'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('contact_info', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', name='orgstatusenum'), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('admin_actions',
    sa.Column('action_type', sa.Enum('approve_org', 'block_user', 'unblock_user', 'reset_password', name='actiontypeenum'), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('admin_id', sa.Uuid(), nullable=False),
    sa.Column('target_user_id', sa.Uuid(), nullable=True),
    sa.Column('target_org_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['target_org_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['target_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'surname',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'patronymic',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_column('users', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.alter_column('users', 'patronymic',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'surname',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_table('admin_actions')
    op.drop_table('organizations')
    # ### end Alembic commands ###
